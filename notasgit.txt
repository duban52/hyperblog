Notas del curso de git

Despues de crear el repositorio, se debe agregar a git

    git init

Para consultar el estado 

    git status


Cuando se quiere agregar un archivo dentro del repositorio

    git add "nombre del archivo"

Para guardar los cambios se debe hacer un commit, se recomienda comentarlo
para saber de que se trata el cambio en el archivo

    git commit -m "mensaje" 


Antes que nada, git debe configurarse, para estado

    git config --global user.name "Duban Restrepo"
    git config --global user.email "duban52@gmail.com"

Siempre que se realice un cambio se debe añadir al git
una manera sencilla es 

    git add .

Para ver el historial de los cambios 

    git show

Para ver el historial de lo que se ha hecho en cada archivo

    git diff "código del commit"


El staging es el lugar donde se guardan temporalmente los cambios, para luego ser llevados definitivamente al repositorio. El repositorio es el lugar donde se guardan todos los registros de los cambios realizados a los archivos.

Para iniciar un repositorio, o sea, activar el sistema de control de versiones de Git en tu proyecto, solo debes ejecutar el comando git init.

Para volver en el tiempo a versiones anteriores

    git log -> para ver los commits realizados

    git reset "código del commit" --hard (regresa hasta el commit del [SHA-1]
    Donde el SHA-1 es el identificador del commit)
   
    git reset --soft [SHA 1]: elimina los cambios hasta el staging area
    
    git reset --mixed [SHA 1]: elimina los cambios hasta el working area


    Para volver a un estado anterior

        git checkout "código del commit" y nombre de archivo si es necesario


      git rm --cached: Elimina los archivos de nuestro repositorio local y del área de staging, pero los mantiene en nuestro disco duro. Básicamente le dice a Git que deje de trackear el historial de cambios de estos archivos, por lo que pasaran a un estado untracked.
git rm --force: Elimina los archivos de Git y del disco duro. Git siempre guarda todo, por lo que podemos acceder al registro de la existencia de los archivos, de modo que podremos recuperarlos si es necesario (pero debemos usar comandos más avanzados).  

git reset --soft: Borramos todo el historial y los registros de Git pero guardamos los cambios que tengamos en Staging, así podemos aplicar las últimas actualizaciones a un nuevo commit.
git reset --hard: Borra todo. Todo todito, absolutamente todo. Toda la información de los commits y del área de staging se borra del historial.